#StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
   name: {{ .Values.serviceName }}
spec:
  serviceName: {{ .Values.serviceName }}
  replicas: {{ .Values.docbroker.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.serviceName }}
    spec:
      containers:
{{ if eq .Values.graylog.enable true }}
      - name: graylog-sidecar-{{ .Values.serviceName }}
        image: {{ .Values.graylog.image | quote }}
        imagePullPolicy: Always
        env:
        - name: GRAYLOG_SERVER
          value: {{ .Values.graylog.server | quote }}
        - name: GRAYLOG_PORT
          value: {{ .Values.graylog.port | quote }}
        - name: TAGS
          value: "[\"linux\",\"apache\"]"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
          - name: shared-logs
            mountPath: /pod-data
{{ end }}
      - name: {{ .Values.serviceName }}
        image: {{ .Values.images.repository }}/{{ .Values.images.contentserver.name }}:{{ .Values.images.contentserver.tag }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        imagePullSecrets: 
          - name: {{ .Values.images.pullSecrets }}
        readinessProbe:
          exec: {
            command: [
              bash,
              -c,
              /opt/dctm_docker/scripts/docbroker_readiness.sh
            ]            
          }
          initialDelaySeconds: 120
          periodSeconds: 120
          failureThreshold: 2
          successThreshold: 1
          timeoutSeconds: 60
        env:
        - name: KUBERNETES
          value: "true"        
        - name: onlyDocbroker
          value: "true"
        - name: ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: rootPassword
        - name: INSTALL_OWNER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: installOwner
        - name: INSTALL_OWNER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: installOwnerPassword
        - name: INSTALLER_UI
          value: {{ .Values.docbroker.installerUI}}
        - name: KEEP_TEMP_FILE
          value: "true"
        - name: INSTALLER_DEBUG_LOG
          value: "true"
      {{- if .Values.upgrade.majorUpgrade }}
        - name: MAJOR_UPGRADE
          value: {{ .Values.upgrade.majorUpgrade | quote }}
        - name: CURRENT_VERSION
          value: {{ .Values.upgrade.currentVersion | quote }}
      {{- end }}
        - name: DOCBROKER_PORT
          value: {{ .Values.ports.docbrokerPort | quote }}        
        - name: ExtDocbrokerPort
          value: {{ .Values.ports.extNativePort | quote }}   
        ports:
        - containerPort: {{ .Values.ports.docbrokerPort }}
          name: docbrokerport
        - containerPort: {{ .Values.ports.docbrokrSSLport }}
          name: docbrokrsslport
        volumeMounts:
        - mountPath: /opt/dctm/kube
          name: {{ .Values.persistentVolume.vctName }}
          subPath: kube
        - mountPath: /opt/dctm/dba/log
          name: shared-logs
          subPath: dba
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory | quote  }}
            cpu: {{ .Values.resources.requests.cpu | quote  }}
          limits:
            memory: {{ .Values.resources.limits.memory | quote  }}
            cpu: {{ .Values.resources.limits.cpu | quote  }}
      volumes:
{{ if eq .Values.graylog.enable true }}
      - name: shared-logs
        emptyDir: {}
{{ end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.persistentVolume.vctName }}
    spec:
      accessModes:
        - {{ .Values.persistentVolume.accessModes }}
      resources:
         requests:
            storage: {{ .Values.persistentVolume.size }}
      storageClassName: {{ .Values.persistentVolume.storageClass }}
{{ if eq .Values.graylog.enable false }}
  - metadata:
      name: shared-logs
    spec:
      accessModes:
        - {{ .Values.persistentVolume.logVctAccessModes }}
      resources:
         requests:
            storage: {{ .Values.persistentVolume.logVctSize }}
      storageClassName: {{ .Values.persistentVolume.logVctStorageClass }}
{{ end }}
